{"version":3,"sources":["webpack:///worker.js","webpack:///webpack/bootstrap 54c02c36559892bb7486?173a","webpack:///../log-parser/dist/index.es5.js","webpack:///./src/utils.ts","webpack:///./src/worker/index.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","o","object","property","prototype","hasOwnProperty","p","s","135","e","t","this","a","TypeError","length","writable","key","amount","averageRange","count","rangeSum","backstabCount","headshotCount","meleeBlockCount","rangeBlockCount","rangeBlockAmount","arguments","isBlocked","range","isBackstab","isHeadshot","isRanged","block","summaries","afk","dealt","received","melee","ranged","isAFK","isReceived","addDamage","addOtherSubSummary","assign","indexOf","isRegionsType","ignoreBots","end","Date","entries","games","meta","errors","lines","relevant","total","version","warnings","players","start","summary","damage","deaths","kills","losses","wins","u","r","split","forEach","h","moduleName","push","parse","date","interesting","isGameStart","api","game","region","addEntry","isGameEnd","type","JSON","stringify","isKill","isDeath","isWin","isLoss","console","info","add","isFinished","g","getResult","keys","timesMet","addOtherSummary","f","y","finish","getSummary","log","now","id","damageSummary","damageInstances","deathWaitingForDamage","isBotGame","gameType","otherPlayer","isNaN","score","Symbol","iterator","next","done","died","killed","mode","VictoryGameMode_Solo.VictoryGameMode_Solo_C","VictoryGameMode.VictoryGameMode_C","VictoryGameMode_Lightning.VictoryGameMode_Lightning_C","VictoryGameMode_Custom.VictoryGameMode_Custom_C","VictoryGameMode_TrialsSolo.VictoryGameMode_TrialsSolo_C","fullLine","isDealt","timestamp","level","parseDate","parseModuleName","parseVersion","parseRegion","parseGameState","parseGameType","parseIsBotGame","parseDamage","parseRankScoring","match","substr","replace","parseInt","warn","error","getTime","DamageSummary","makeCloneable","ICullingParser","137","sortGenericByDiff","diff","order","sortGamesByStart","b","undefined","fastConcat","array","otherArray","v","328","fakeProgressIncrementor","remaining","fakeProgress","handleFile","file","progressHandler","successHandler","errorHandler","reader","FileReader","readAsText","onprogress","progressEvent","progress","lengthComputable","loaded","onload","event","result","culling_log_parser_1","onerror","utils_1","onmessage","files","data","totalResult","fileSerialHandler","index","arrayProgress","postMessage","output","beforeLast","player","sort","message","stack"],"mappings":"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","file":"worker.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmory imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmory exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tObject.defineProperty(exports, name, {\n/******/ \t\t\tconfigurable: false,\n/******/ \t\t\tenumerable: true,\n/******/ \t\t\tget: getter\n/******/ \t\t});\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 328);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 135:\n/***/ function(module, exports, __webpack_require__) {\n\n!function(e,t){ true?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports[\"culling-log-parser\"]=t():e[\"culling-log-parser\"]=t()}(this,function(){return function(e){function t(i){if(a[i])return a[i].exports;var s=a[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var a={};return t.m=e,t.c=a,t.i=function(e){return e},t.d=function(e,t,a){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},t.n=function(e){var a=e&&e.__esModule?function(){return e[\"default\"]}:function(){return e};return t.d(a,\"a\",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=6)}([function(e,t){\"use strict\";function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var i=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),s=function(){function e(){a(this,e),this.amount=0,this.averageRange=0,this.count=0,this.rangeSum=0,this.backstabCount=0,this.headshotCount=0,this.meleeBlockCount=0,this.rangeBlockCount=0,this.rangeBlockAmount=0}return i(e,[{key:\"addDamage\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?0:arguments[0],t=arguments[1];t.isBlocked||(this.count++,this.amount+=e),this.rangeSum+=t.range,this.count>0&&(this.averageRange=this.rangeSum/this.count),t.isBackstab&&this.backstabCount++,t.isHeadshot&&this.headshotCount++,t.isBlocked&&(t.isRanged?(this.rangeBlockAmount+=e*(t.block/100),this.rangeBlockCount++):this.meleeBlockCount++)}},{key:\"addOtherSubSummary\",value:function(t){var a=new e;return a.amount=this.amount+t.amount,a.count=this.count+t.count,this.count>0||t.count>0?a.averageRange=(this.rangeSum+t.rangeSum)/(this.count+t.count):a.averageRange=0,a.backstabCount=this.backstabCount+t.backstabCount,a.headshotCount=this.headshotCount+t.headshotCount,a.meleeBlockCount=this.meleeBlockCount+t.meleeBlockCount,a.rangeBlockAmount=this.rangeBlockAmount+t.rangeBlockAmount,a.rangeBlockCount=this.rangeBlockCount+t.rangeBlockCount,a.rangeSum=this.rangeSum+t.rangeSum,a}}]),e}(),n=function(){function e(){a(this,e),this.summaries={afk:{dealt:new s,received:new s},melee:{dealt:new s,received:new s},ranged:{dealt:new s,received:new s}}}return i(e,[{key:\"add\",value:function(e){var t=this.summaries.melee;e.isRanged&&(t=e.isAFK?this.summaries.afk:this.summaries.ranged);var a=t.dealt,i=e.dealt;e.isReceived&&(a=t.received,i=e.received),a.addDamage(i,e)}},{key:\"addOtherSummary\",value:function(t){var a=new e;return a.summaries={afk:{dealt:this.summaries.afk.dealt.addOtherSubSummary(t.summaries.afk.dealt),received:this.summaries.afk.received.addOtherSubSummary(t.summaries.afk.received)},melee:{dealt:this.summaries.melee.dealt.addOtherSubSummary(t.summaries.melee.dealt),received:this.summaries.melee.received.addOtherSubSummary(t.summaries.melee.received)},ranged:{dealt:this.summaries.ranged.dealt.addOtherSubSummary(t.summaries.ranged.dealt),received:this.summaries.ranged.received.addOtherSubSummary(t.summaries.ranged.received)}},a}},{key:\"getSummary\",value:function(){var e=this.summaries.melee.dealt.addOtherSubSummary(this.summaries.ranged.dealt);e=e.addOtherSubSummary(this.summaries.afk.dealt);var t=this.summaries.melee.received.addOtherSubSummary(this.summaries.ranged.received);t=t.addOtherSubSummary(this.summaries.afk.received);var a=e.count+t.count,i=e.rangeSum+t.rangeSum,s=Object.assign({},this.summaries,{averageRange:i/a},{dealt:e,received:t});return s}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=n},function(e,t){\"use strict\";function a(e){return i.indexOf(e)!==-1}var i=[\"eu\",\"us-east\",\"us-west\",\"ocn\"];t.isRegionsType=a},function(e,t,a){\"use strict\";function i(e){var t=arguments.length<=1||void 0===arguments[1]?{ignoreBots:!1}:arguments[1],a=[],i={end:new Date,entries:[],games:[],meta:{errors:[],lines:{relevant:0,total:0},version:0,warnings:[]},players:{},start:new Date,summary:{damage:new s[\"default\"],deaths:0,kills:0,losses:0,wins:0}},u=!1,l=new r[\"default\"],m=\"\",d=e.split(\"\\n\");return d.forEach(function(e,d){i.meta.lines.total++;var h=new n[\"default\"](e);if(a.indexOf(h.moduleName)===-1&&a.push(h.moduleName),h.parse(t),!u&&h.date&&(u=!0,i.start=h.date),h.date&&(i.end=h.date),h.interesting)if(i.meta.lines.relevant++,h.isGameStart&&(l=new r[\"default\"]),0===h.version.api){if(\"\"===h.version.game){if(0===i.meta.version&&h.isGameStart){var c=\"Parsed log file does not appear to have a recognized version line.\";i.meta.warnings.indexOf(c)===-1&&i.meta.warnings.push(c)}if(h.region&&(m=h.region),l.addEntry(h),!h.isGameEnd&&!l.type||\"unknown\"===l.type||\"bot\"===l.type)return void(\"bot\"===l.type||h.isGameStart||h.isGameEnd||h.region||i.meta.warnings.push(\"Unknown game type, ignoring possibly interesting entry. Gametype: \"+l.type+\", Entry: \"+JSON.stringify(h)+\".\"));if(h.isKill&&i.summary.kills++,h.isDeath&&i.summary.deaths++,h.isWin&&i.summary.wins++,h.isLoss&&i.summary.losses++,h.damage.isBlocked&&h.damage.isBackstab&&i.meta.warnings.push(\"Someone blocked a backstab?!?!?!?!\"),h.damage.isBlocked&&h.damage.isAFK&&(console.info(\"culling-log-parser: \"),i.meta.warnings.push(\"Someone blocked a damage instance from stupid range.\\n      Rare but can happen, just wanted to let you know.\")),i.summary.damage.add(h.damage),l.isFinished){var g=l.getResult();Object.keys(g.players).forEach(function(e){i.players[e]||(i.players[e]={damage:new s[\"default\"],timesMet:0}),i.players[e].damage=i.players[e].damage.addOtherSummary(l.players[e]),i.players[e].timesMet++}),i.games.push(g),l=new r[\"default\"](m)}i.entries.push(h)}}else{if(i.meta.version=h.version.api,h.version.api<92253){var f=\"Parsed old log file that is known to not have kills or deaths.\";i.meta.warnings.indexOf(f)===-1&&i.meta.warnings.push(f)}if(!o.indexOf(h.version.api)){var y=\"Parsed log file that is not from an API Version that is verified: \"+h.version.api;i.meta.warnings.indexOf(y)===-1&&i.meta.warnings.push(y)}}}),l.start&&!l.isFinished&&(l.finish(i.entries[i.entries.length-1]),i.games.push(l.getResult())),o.indexOf(i.meta.version)!==-1&&i.summary.damage.getSummary().dealt.amount>100&&0===i.summary.kills&&console.log(\"No kills found in version\",i.meta.version,i.summary.damage.getSummary().dealt.amount,i.summary.wins,i.summary.losses,i.summary.deaths,i.start),i.meta.version<92253&&i.summary.kills>0&&console.log(\"Old version that *does* have kills\",i.meta.version),i}var s=a(0),n=a(5),r=a(4),o=[92253,92358,92449,92896,93315,93811];Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=i},function(e,t){\"use strict\";function a(e){var t={entries:e.entries,games:e.games,meta:e.meta,players:{},summary:{damage:e.summary.damage.getSummary(),deaths:e.summary.deaths,kills:e.summary.kills,losses:e.summary.losses,wins:e.summary.wins}};return Object.keys(e.players).forEach(function(a){t.players[a]={damage:e.players[a].damage.getSummary(),timesMet:e.players[a].timesMet}}),t}Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=a},function(e,t,a){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(0),r=Date.now(),o=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?\"\":arguments[0];i(this,e),this.id=++r,this.start=null,this.end=null,this.players={},this.damageSummary=new n[\"default\"],this.damageInstances=[],this.kills=0,this.isWin=!1,this.isLoss=!1,this.isFinished=!1,this.deathWaitingForDamage=!1,this.type=\"\",this.region=t,this.isBotGame=!0}return s(e,[{key:\"addEntry\",value:function(e){e.isGameStart&&(this.start=e.date||new Date),this.addDamage(e),\"\"!==e.gameType.game&&(this.type=e.gameType.game),e.region&&(this.region=e.region),e.isKill&&this.kills++,this.deathWaitingForDamage&&e.damage.isReceived?this.finish(e):e.isWin?this.isWin=!0:e.isDeath||e.isLoss?(this.isLoss=!0,this.deathWaitingForDamage=!0):this.start&&e.isGameEnd&&this.finish(e)}},{key:\"addDamage\",value:function(e){(e.damage.dealt||e.damage.received||e.damage.isBlocked)&&(this.damageSummary.add(e.damage),this.players[e.otherPlayer]||(this.players[e.otherPlayer]=new n[\"default\"]),this.players[e.otherPlayer].add(e.damage),this.damageInstances.push(Object.assign({name:e.otherPlayer},e.damage)))}},{key:\"finish\",value:function(e){e.date&&(this.end=e.date),isNaN(e.score)||(this.score=e.score),this.isFinished=!0}},{key:\"getResult\",value:function(){var e=Object.keys(this.players),t={},a=!0,i=!1,s=void 0;try{for(var n,r=e[Symbol.iterator]();!(a=(n=r.next()).done);a=!0){var o=n.value;t[o]={damage:this.players[o].getSummary(),died:!1,killed:!1}}}catch(u){i=!0,s=u}finally{try{!a&&r[\"return\"]&&r[\"return\"]()}finally{if(i)throw s}}return{damageInstances:this.damageInstances,damageSummary:this.damageSummary.getSummary(),end:this.end||new Date(0),id:this.id,isLoss:this.isLoss,isWin:this.isWin,kills:this.kills,mode:this.type,players:t,region:this.region,score:this.score,start:this.start||new Date(0)}}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=o},function(e,t,a){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(1),r={\"VictoryGameMode_Solo.VictoryGameMode_Solo_C\":\"solo\",\"VictoryGameMode.VictoryGameMode_C\":\"team\",\"VictoryGameMode_Lightning.VictoryGameMode_Lightning_C\":\"lightning\",\"VictoryGameMode_Custom.VictoryGameMode_Custom_C\":\"custom\",\"VictoryGameMode_TrialsSolo.VictoryGameMode_TrialsSolo_C\":\"trials\"},o=function(){function e(t){i(this,e),this.fullLine=t,this.damage={block:0,dealt:0,isAFK:!1,isBackstab:!1,isBlocked:!1,isDealt:!0,isHeadshot:!1,isRanged:!1,isReceived:!1,range:0,received:0,timestamp:0},this.isGameStart=!1,this.isGameEnd=!1,this.isWin=!1,this.isLoss=!1,this.otherPlayer=\"\",this.isKill=!1,this.isDeath=!1,this.score=0,this.region=\"\",this.version={api:0,game:\"\"},this.gameType={game:\"\",level:\"\"},this.interesting=!1,this.date=this.parseDate(),this.moduleName=this.parseModuleName()}return s(e,[{key:\"parse\",value:function(e){this.parseVersion(),this.parseRegion(),this.parseGameState(),this.parseGameType(),this.parseIsBotGame(),this.parseDamage(e.ignoreBots),this.parseRankScoring()}},{key:\"parseDate\",value:function(){if(!this.fullLine.match(/^\\[[\\d\\.\\-:]+]/))return null;var e=this.fullLine.substr(1,4),t=this.fullLine.substr(6,2),a=this.fullLine.substr(9,2),i=this.fullLine.substr(12,2),s=this.fullLine.substr(15,2),n=this.fullLine.substr(18,2),r=this.fullLine.substr(21,3);return new Date(e+\"-\"+t+\"-\"+a+\"T\"+i+\":\"+s+\":\"+n+\".\"+r+\"Z\")}},{key:\"parseModuleName\",value:function(){var e=this.fullLine;this.date&&(e=e.substr(30));var t=e.match(/^[^\\s]+/);if(!t)return\"NoModuleFound\";var a=t[0].replace(/:$/,\"\");return a}},{key:\"parseVersion\",value:function(){if(\"LogInit\"===this.moduleName){var e=this.fullLine.substr(9);this.date&&(e=this.fullLine.substr(39)),0===e.indexOf(\"Version:\")?(this.version.game=e.substr(18),this.interesting=!0):0===e.indexOf(\"API Version:\")&&(this.version.api=parseInt(e.substr(13),10),this.interesting=!0)}}},{key:\"parseRegion\",value:function(){if(\"FrontEnd:Display\"===this.moduleName){var e=this.fullLine.substr(48),t=e.match(/appid is [\\d]+, using url https?:\\/\\/clientweb-([^\\.]+).theculling.net\\/api/i);if(t){this.interesting=!0;var a=t[1];n.isRegionsType(a)?this.region=a:this.region=\"unknown\"}}}},{key:\"parseGameState\",value:function(){if(\"LogOnline\"===this.moduleName){var e=this.fullLine.substr(41);e.indexOf(\"GotoState: NewState: Playing\")!==-1?(this.interesting=!0,this.isGameStart=!0):e.indexOf(\"GotoState: NewState: MainMenu\")!==-1&&(this.isGameEnd=!0,this.interesting=!0)}}},{key:\"parseGameType\",value:function(){if(\"LogNet\"===this.moduleName){var e=this.fullLine.substr(38);if(e.indexOf(\"Welcomed by server\")!==-1){var t=e.match(/\\(Level: \\/Game\\/Maps\\/([^,]+), Game: \\/Game\\/Blueprints\\/GameMode\\/([^\\)]+)\\)/i);if(!t)return void console.warn(\"culling-log-parser: WARNING! Found a server welcome that didn't match expected format\",this.fullLine);this.interesting=!0;var a=r[t[2]];a||(console.warn(\"culling-log-parser: WARNING! Found an unknown game mode.\",t[2],this.fullLine),a=\"unknown\"),this.gameType={game:a,level:t[1]}}}}},{key:\"parseIsBotGame\",value:function(){if(\"LogLoad\"===this.moduleName){var e=this.fullLine.substr(38);e.match(/LoadMap: (?:[\\d\\.]+)?\\/?\\/Game\\/Maps\\/(?:Tutorial|Jungle\\/Jungle_P\\?bEnableBots)/i)&&(this.gameType.game=\"bot\",this.interesting=!0)}}},{key:\"parseDamage\",value:function(){var e=!(arguments.length<=0||void 0===arguments[0])&&arguments[0];if(\"VictoryDamage:Display\"===this.moduleName){var t=this.fullLine.substr(53),a=t.match(/You hit (.*) for (-?[\\d\\.]+) damage \\(([\\d\\.]+)\\ m\\)/i);if(a||(this.damage.isDealt=!1,this.damage.isReceived=!0,a=t.match(/Struck by (.*) for (-?[\\d\\.]+) damage \\(([\\d\\.]+)\\ m\\)/i)),!a)return void console.error(\"VictoryDamage:Display with wrong format\",t);if(this.interesting=!0,this.otherPlayer=a[1],e&&this.otherPlayer.match(/<BOT>[\\d]-[A-F0-9]{32}/))return void(this.interesting=!1);this.date&&(this.damage.timestamp=this.date.getTime());var i=parseInt(a[2],10);this.damage.isDealt?this.damage.dealt=i:this.damage.received=i,this.damage.range=parseInt(a[3],10),this.damage.range>3&&(this.damage.isRanged=!0,this.damage.range>300&&(this.damage.isAFK=!0));var s=t.match(/BLOCKED ([\\d]+)%/i);s&&(this.damage.isBlocked=!0,this.damage.block=parseInt(s[1],10),50===this.damage.block?this.damage.isRanged=!0:100!==this.damage.block&&25!==this.damage.block&&console.info(\"culling-log-parser: Found abnormal block value!\",s[1],this.fullLine)),t.match(\"BACKSTAB!\")&&(this.damage.isBackstab=!0),t.match(\"HEADSHOT!\")&&(this.damage.isHeadshot=!0)}}},{key:\"parseRankScoring\",value:function(){if(\"LogOnline:Warning\"===this.moduleName){var e=this.fullLine.substr(49),t=e.match(/RankScoring (win|loss|kill|death): (-?[\\d]+)/i);if(t)switch(this.interesting=!0,this.score=parseInt(t[2],10),t[1]){case\"win\":this.isWin=!0;break;case\"loss\":this.isLoss=!0;break;case\"kill\":this.isKill=!0;break;case\"death\":this.isDeath=!0;break;default:console.error(\"Found unknown RankScoring value:\"+e)}}}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=o},function(e,t,a){\"use strict\";var i=a(2),s=a(0);t.DamageSummary=s[\"default\"];var n=a(3);t.makeCloneable=n[\"default\"];var r=a(1);t.ICullingParser=r,Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=i[\"default\"]}])});\n//# sourceMappingURL=index.es5.js.map\n\n/***/ },\n\n/***/ 137:\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nfunction sortGenericByDiff(diff, order) {\n    if (order === 'asc') {\n        return diff;\n    } else {\n        return diff * -1;\n    }\n}\nfunction sortGamesByStart(a, b) {\n    var order = arguments.length <= 2 || arguments[2] === undefined ? 'asc' : arguments[2];\n\n    var diff = a.start.getTime() - b.start.getTime();\n    return sortGenericByDiff(diff, order);\n}\nexports.sortGamesByStart = sortGamesByStart;\nfunction fastConcat(array, otherArray) {\n    otherArray.forEach(function (v) {\n        return array.push(v);\n    });\n}\nexports.fastConcat = fastConcat;\n\n/***/ },\n\n/***/ 328:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\"use strict\";\n\nvar culling_log_parser_1 = __webpack_require__(135);\nvar utils_1 = __webpack_require__(137);\n// fake loading bar 4Head\nvar fakeProgress = 0;\nfunction fakeProgressIncrementor() {\n    var remaining = 100 - fakeProgress;\n    fakeProgress += remaining * 0.01;\n    return fakeProgress;\n}\n;\nfunction handleFile(file, progressHandler, successHandler, errorHandler) {\n    var reader = new FileReader();\n    reader.readAsText(file);\n    reader.onprogress = function (progressEvent) {\n        var progress = 0;\n        if (progressEvent.lengthComputable) {\n            progress = progressEvent.loaded / progressEvent.total * 100;\n        } else {\n            // fake it!\n            console.log('Faking progress');\n            progress = fakeProgressIncrementor();\n        }\n        progress = progress / 2; // divide by two, because these events only count for the filereading itself for now\n        progressHandler.call(reader, progress);\n    };\n    reader.onload = function (event) {\n        var result = void 0;\n        try {\n            result = culling_log_parser_1.default(reader.result, { ignoreBots: true });\n        } catch (e) {\n            errorHandler.call(reader, e);\n            return;\n        }\n        successHandler.call(reader, result);\n    };\n    reader.onerror = errorHandler;\n}\nonmessage = function onmessage(event) {\n    var files = event.data;\n    var totalResult = {\n        end: new Date(0),\n        entries: [],\n        games: [],\n        meta: {\n            errors: [],\n            lines: {\n                relevant: 0,\n                total: 0\n            },\n            version: 0,\n            warnings: []\n        },\n        players: {},\n        start: new Date(),\n        summary: {\n            damage: new culling_log_parser_1.DamageSummary(),\n            deaths: 0,\n            kills: 0,\n            losses: 0,\n            wins: 0\n        }\n    };\n    var fileSerialHandler = function fileSerialHandler(index) {\n        var arrayProgress = index / files.length * 100;\n        handleFile(files[index], function (progress) {\n            postMessage({\n                progress: arrayProgress + progress / files.length,\n                type: 'progress'\n            });\n        }, function (output) {\n            try {\n                var beforeLast = false;\n                if (output.start < totalResult.start) {\n                    totalResult.start = output.start;\n                    beforeLast = true;\n                }\n                if (output.end > totalResult.end) {\n                    if (index > 0 && beforeLast) {\n                        console.warn('A log file was before and after the already parsed output.', files[index - 1].name, 'output.end', output.end, 'output.start', output.start, 'totalResult.end', totalResult.end, 'totalResult.start', totalResult.start);\n                    }\n                    totalResult.end = output.end;\n                }\n                utils_1.fastConcat(totalResult.entries, output.entries);\n                utils_1.fastConcat(totalResult.games, output.games);\n                totalResult.meta.lines.relevant += output.meta.lines.relevant;\n                totalResult.meta.lines.total += output.meta.lines.total;\n                Object.keys(output.players).forEach(function (name) {\n                    var player = totalResult.players[name];\n                    if (!player) {\n                        totalResult.players[name] = player = output.players[name];\n                    } else {\n                        player.damage = player.damage.addOtherSummary(output.players[name].damage);\n                        player.killed += output.players[name].killed;\n                        player.died += output.players[name].died;\n                        player.timesMet += output.players[name].timesMet;\n                    }\n                });\n                totalResult.summary.damage = totalResult.summary.damage.addOtherSummary(output.summary.damage);\n                totalResult.summary.deaths += output.summary.deaths;\n                totalResult.summary.kills += output.summary.kills;\n                totalResult.summary.losses += output.summary.losses;\n                totalResult.summary.wins += output.summary.wins;\n                utils_1.fastConcat(totalResult.meta.errors, output.meta.errors);\n                utils_1.fastConcat(totalResult.meta.warnings, output.meta.warnings);\n                index++;\n                if (files[index]) {\n                    // get more files\n                    fileSerialHandler(index);\n                } else {\n                    totalResult.games.sort(utils_1.sortGamesByStart);\n                    postMessage({\n                        output: culling_log_parser_1.makeCloneable(totalResult),\n                        type: 'done'\n                    });\n                }\n            } catch (error) {\n                postMessage({\n                    error: error.message,\n                    stack: error.stack,\n                    type: 'error'\n                });\n            }\n        }, function (error) {\n            console.log('Posting error');\n            postMessage({\n                error: error.message,\n                stack: error.stack,\n                type: 'error'\n            });\n        });\n    };\n    fileSerialHandler(0);\n    postMessage({\n        type: 'started'\n    });\n};\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// worker.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmory imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmory exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tObject.defineProperty(exports, name, {\n \t\t\tconfigurable: false,\n \t\t\tenumerable: true,\n \t\t\tget: getter\n \t\t});\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 328);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 54c02c36559892bb7486","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports[\"culling-log-parser\"]=t():e[\"culling-log-parser\"]=t()}(this,function(){return function(e){function t(i){if(a[i])return a[i].exports;var s=a[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,t),s.l=!0,s.exports}var a={};return t.m=e,t.c=a,t.i=function(e){return e},t.d=function(e,t,a){Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:a})},t.n=function(e){var a=e&&e.__esModule?function(){return e[\"default\"]}:function(){return e};return t.d(a,\"a\",a),a},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"\",t(t.s=6)}([function(e,t){\"use strict\";function a(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var i=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),s=function(){function e(){a(this,e),this.amount=0,this.averageRange=0,this.count=0,this.rangeSum=0,this.backstabCount=0,this.headshotCount=0,this.meleeBlockCount=0,this.rangeBlockCount=0,this.rangeBlockAmount=0}return i(e,[{key:\"addDamage\",value:function(){var e=arguments.length<=0||void 0===arguments[0]?0:arguments[0],t=arguments[1];t.isBlocked||(this.count++,this.amount+=e),this.rangeSum+=t.range,this.count>0&&(this.averageRange=this.rangeSum/this.count),t.isBackstab&&this.backstabCount++,t.isHeadshot&&this.headshotCount++,t.isBlocked&&(t.isRanged?(this.rangeBlockAmount+=e*(t.block/100),this.rangeBlockCount++):this.meleeBlockCount++)}},{key:\"addOtherSubSummary\",value:function(t){var a=new e;return a.amount=this.amount+t.amount,a.count=this.count+t.count,this.count>0||t.count>0?a.averageRange=(this.rangeSum+t.rangeSum)/(this.count+t.count):a.averageRange=0,a.backstabCount=this.backstabCount+t.backstabCount,a.headshotCount=this.headshotCount+t.headshotCount,a.meleeBlockCount=this.meleeBlockCount+t.meleeBlockCount,a.rangeBlockAmount=this.rangeBlockAmount+t.rangeBlockAmount,a.rangeBlockCount=this.rangeBlockCount+t.rangeBlockCount,a.rangeSum=this.rangeSum+t.rangeSum,a}}]),e}(),n=function(){function e(){a(this,e),this.summaries={afk:{dealt:new s,received:new s},melee:{dealt:new s,received:new s},ranged:{dealt:new s,received:new s}}}return i(e,[{key:\"add\",value:function(e){var t=this.summaries.melee;e.isRanged&&(t=e.isAFK?this.summaries.afk:this.summaries.ranged);var a=t.dealt,i=e.dealt;e.isReceived&&(a=t.received,i=e.received),a.addDamage(i,e)}},{key:\"addOtherSummary\",value:function(t){var a=new e;return a.summaries={afk:{dealt:this.summaries.afk.dealt.addOtherSubSummary(t.summaries.afk.dealt),received:this.summaries.afk.received.addOtherSubSummary(t.summaries.afk.received)},melee:{dealt:this.summaries.melee.dealt.addOtherSubSummary(t.summaries.melee.dealt),received:this.summaries.melee.received.addOtherSubSummary(t.summaries.melee.received)},ranged:{dealt:this.summaries.ranged.dealt.addOtherSubSummary(t.summaries.ranged.dealt),received:this.summaries.ranged.received.addOtherSubSummary(t.summaries.ranged.received)}},a}},{key:\"getSummary\",value:function(){var e=this.summaries.melee.dealt.addOtherSubSummary(this.summaries.ranged.dealt);e=e.addOtherSubSummary(this.summaries.afk.dealt);var t=this.summaries.melee.received.addOtherSubSummary(this.summaries.ranged.received);t=t.addOtherSubSummary(this.summaries.afk.received);var a=e.count+t.count,i=e.rangeSum+t.rangeSum,s=Object.assign({},this.summaries,{averageRange:i/a},{dealt:e,received:t});return s}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=n},function(e,t){\"use strict\";function a(e){return i.indexOf(e)!==-1}var i=[\"eu\",\"us-east\",\"us-west\",\"ocn\"];t.isRegionsType=a},function(e,t,a){\"use strict\";function i(e){var t=arguments.length<=1||void 0===arguments[1]?{ignoreBots:!1}:arguments[1],a=[],i={end:new Date,entries:[],games:[],meta:{errors:[],lines:{relevant:0,total:0},version:0,warnings:[]},players:{},start:new Date,summary:{damage:new s[\"default\"],deaths:0,kills:0,losses:0,wins:0}},u=!1,l=new r[\"default\"],m=\"\",d=e.split(\"\\n\");return d.forEach(function(e,d){i.meta.lines.total++;var h=new n[\"default\"](e);if(a.indexOf(h.moduleName)===-1&&a.push(h.moduleName),h.parse(t),!u&&h.date&&(u=!0,i.start=h.date),h.date&&(i.end=h.date),h.interesting)if(i.meta.lines.relevant++,h.isGameStart&&(l=new r[\"default\"]),0===h.version.api){if(\"\"===h.version.game){if(0===i.meta.version&&h.isGameStart){var c=\"Parsed log file does not appear to have a recognized version line.\";i.meta.warnings.indexOf(c)===-1&&i.meta.warnings.push(c)}if(h.region&&(m=h.region),l.addEntry(h),!h.isGameEnd&&!l.type||\"unknown\"===l.type||\"bot\"===l.type)return void(\"bot\"===l.type||h.isGameStart||h.isGameEnd||h.region||i.meta.warnings.push(\"Unknown game type, ignoring possibly interesting entry. Gametype: \"+l.type+\", Entry: \"+JSON.stringify(h)+\".\"));if(h.isKill&&i.summary.kills++,h.isDeath&&i.summary.deaths++,h.isWin&&i.summary.wins++,h.isLoss&&i.summary.losses++,h.damage.isBlocked&&h.damage.isBackstab&&i.meta.warnings.push(\"Someone blocked a backstab?!?!?!?!\"),h.damage.isBlocked&&h.damage.isAFK&&(console.info(\"culling-log-parser: \"),i.meta.warnings.push(\"Someone blocked a damage instance from stupid range.\\n      Rare but can happen, just wanted to let you know.\")),i.summary.damage.add(h.damage),l.isFinished){var g=l.getResult();Object.keys(g.players).forEach(function(e){i.players[e]||(i.players[e]={damage:new s[\"default\"],timesMet:0}),i.players[e].damage=i.players[e].damage.addOtherSummary(l.players[e]),i.players[e].timesMet++}),i.games.push(g),l=new r[\"default\"](m)}i.entries.push(h)}}else{if(i.meta.version=h.version.api,h.version.api<92253){var f=\"Parsed old log file that is known to not have kills or deaths.\";i.meta.warnings.indexOf(f)===-1&&i.meta.warnings.push(f)}if(!o.indexOf(h.version.api)){var y=\"Parsed log file that is not from an API Version that is verified: \"+h.version.api;i.meta.warnings.indexOf(y)===-1&&i.meta.warnings.push(y)}}}),l.start&&!l.isFinished&&(l.finish(i.entries[i.entries.length-1]),i.games.push(l.getResult())),o.indexOf(i.meta.version)!==-1&&i.summary.damage.getSummary().dealt.amount>100&&0===i.summary.kills&&console.log(\"No kills found in version\",i.meta.version,i.summary.damage.getSummary().dealt.amount,i.summary.wins,i.summary.losses,i.summary.deaths,i.start),i.meta.version<92253&&i.summary.kills>0&&console.log(\"Old version that *does* have kills\",i.meta.version),i}var s=a(0),n=a(5),r=a(4),o=[92253,92358,92449,92896,93315,93811];Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=i},function(e,t){\"use strict\";function a(e){var t={entries:e.entries,games:e.games,meta:e.meta,players:{},summary:{damage:e.summary.damage.getSummary(),deaths:e.summary.deaths,kills:e.summary.kills,losses:e.summary.losses,wins:e.summary.wins}};return Object.keys(e.players).forEach(function(a){t.players[a]={damage:e.players[a].damage.getSummary(),timesMet:e.players[a].timesMet}}),t}Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=a},function(e,t,a){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(0),r=Date.now(),o=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?\"\":arguments[0];i(this,e),this.id=++r,this.start=null,this.end=null,this.players={},this.damageSummary=new n[\"default\"],this.damageInstances=[],this.kills=0,this.isWin=!1,this.isLoss=!1,this.isFinished=!1,this.deathWaitingForDamage=!1,this.type=\"\",this.region=t,this.isBotGame=!0}return s(e,[{key:\"addEntry\",value:function(e){e.isGameStart&&(this.start=e.date||new Date),this.addDamage(e),\"\"!==e.gameType.game&&(this.type=e.gameType.game),e.region&&(this.region=e.region),e.isKill&&this.kills++,this.deathWaitingForDamage&&e.damage.isReceived?this.finish(e):e.isWin?this.isWin=!0:e.isDeath||e.isLoss?(this.isLoss=!0,this.deathWaitingForDamage=!0):this.start&&e.isGameEnd&&this.finish(e)}},{key:\"addDamage\",value:function(e){(e.damage.dealt||e.damage.received||e.damage.isBlocked)&&(this.damageSummary.add(e.damage),this.players[e.otherPlayer]||(this.players[e.otherPlayer]=new n[\"default\"]),this.players[e.otherPlayer].add(e.damage),this.damageInstances.push(Object.assign({name:e.otherPlayer},e.damage)))}},{key:\"finish\",value:function(e){e.date&&(this.end=e.date),isNaN(e.score)||(this.score=e.score),this.isFinished=!0}},{key:\"getResult\",value:function(){var e=Object.keys(this.players),t={},a=!0,i=!1,s=void 0;try{for(var n,r=e[Symbol.iterator]();!(a=(n=r.next()).done);a=!0){var o=n.value;t[o]={damage:this.players[o].getSummary(),died:!1,killed:!1}}}catch(u){i=!0,s=u}finally{try{!a&&r[\"return\"]&&r[\"return\"]()}finally{if(i)throw s}}return{damageInstances:this.damageInstances,damageSummary:this.damageSummary.getSummary(),end:this.end||new Date(0),id:this.id,isLoss:this.isLoss,isWin:this.isWin,kills:this.kills,mode:this.type,players:t,region:this.region,score:this.score,start:this.start||new Date(0)}}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=o},function(e,t,a){\"use strict\";function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var s=function(){function e(e,t){for(var a=0;a<t.length;a++){var i=t[a];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,a,i){return a&&e(t.prototype,a),i&&e(t,i),t}}(),n=a(1),r={\"VictoryGameMode_Solo.VictoryGameMode_Solo_C\":\"solo\",\"VictoryGameMode.VictoryGameMode_C\":\"team\",\"VictoryGameMode_Lightning.VictoryGameMode_Lightning_C\":\"lightning\",\"VictoryGameMode_Custom.VictoryGameMode_Custom_C\":\"custom\",\"VictoryGameMode_TrialsSolo.VictoryGameMode_TrialsSolo_C\":\"trials\"},o=function(){function e(t){i(this,e),this.fullLine=t,this.damage={block:0,dealt:0,isAFK:!1,isBackstab:!1,isBlocked:!1,isDealt:!0,isHeadshot:!1,isRanged:!1,isReceived:!1,range:0,received:0,timestamp:0},this.isGameStart=!1,this.isGameEnd=!1,this.isWin=!1,this.isLoss=!1,this.otherPlayer=\"\",this.isKill=!1,this.isDeath=!1,this.score=0,this.region=\"\",this.version={api:0,game:\"\"},this.gameType={game:\"\",level:\"\"},this.interesting=!1,this.date=this.parseDate(),this.moduleName=this.parseModuleName()}return s(e,[{key:\"parse\",value:function(e){this.parseVersion(),this.parseRegion(),this.parseGameState(),this.parseGameType(),this.parseIsBotGame(),this.parseDamage(e.ignoreBots),this.parseRankScoring()}},{key:\"parseDate\",value:function(){if(!this.fullLine.match(/^\\[[\\d\\.\\-:]+]/))return null;var e=this.fullLine.substr(1,4),t=this.fullLine.substr(6,2),a=this.fullLine.substr(9,2),i=this.fullLine.substr(12,2),s=this.fullLine.substr(15,2),n=this.fullLine.substr(18,2),r=this.fullLine.substr(21,3);return new Date(e+\"-\"+t+\"-\"+a+\"T\"+i+\":\"+s+\":\"+n+\".\"+r+\"Z\")}},{key:\"parseModuleName\",value:function(){var e=this.fullLine;this.date&&(e=e.substr(30));var t=e.match(/^[^\\s]+/);if(!t)return\"NoModuleFound\";var a=t[0].replace(/:$/,\"\");return a}},{key:\"parseVersion\",value:function(){if(\"LogInit\"===this.moduleName){var e=this.fullLine.substr(9);this.date&&(e=this.fullLine.substr(39)),0===e.indexOf(\"Version:\")?(this.version.game=e.substr(18),this.interesting=!0):0===e.indexOf(\"API Version:\")&&(this.version.api=parseInt(e.substr(13),10),this.interesting=!0)}}},{key:\"parseRegion\",value:function(){if(\"FrontEnd:Display\"===this.moduleName){var e=this.fullLine.substr(48),t=e.match(/appid is [\\d]+, using url https?:\\/\\/clientweb-([^\\.]+).theculling.net\\/api/i);if(t){this.interesting=!0;var a=t[1];n.isRegionsType(a)?this.region=a:this.region=\"unknown\"}}}},{key:\"parseGameState\",value:function(){if(\"LogOnline\"===this.moduleName){var e=this.fullLine.substr(41);e.indexOf(\"GotoState: NewState: Playing\")!==-1?(this.interesting=!0,this.isGameStart=!0):e.indexOf(\"GotoState: NewState: MainMenu\")!==-1&&(this.isGameEnd=!0,this.interesting=!0)}}},{key:\"parseGameType\",value:function(){if(\"LogNet\"===this.moduleName){var e=this.fullLine.substr(38);if(e.indexOf(\"Welcomed by server\")!==-1){var t=e.match(/\\(Level: \\/Game\\/Maps\\/([^,]+), Game: \\/Game\\/Blueprints\\/GameMode\\/([^\\)]+)\\)/i);if(!t)return void console.warn(\"culling-log-parser: WARNING! Found a server welcome that didn't match expected format\",this.fullLine);this.interesting=!0;var a=r[t[2]];a||(console.warn(\"culling-log-parser: WARNING! Found an unknown game mode.\",t[2],this.fullLine),a=\"unknown\"),this.gameType={game:a,level:t[1]}}}}},{key:\"parseIsBotGame\",value:function(){if(\"LogLoad\"===this.moduleName){var e=this.fullLine.substr(38);e.match(/LoadMap: (?:[\\d\\.]+)?\\/?\\/Game\\/Maps\\/(?:Tutorial|Jungle\\/Jungle_P\\?bEnableBots)/i)&&(this.gameType.game=\"bot\",this.interesting=!0)}}},{key:\"parseDamage\",value:function(){var e=!(arguments.length<=0||void 0===arguments[0])&&arguments[0];if(\"VictoryDamage:Display\"===this.moduleName){var t=this.fullLine.substr(53),a=t.match(/You hit (.*) for (-?[\\d\\.]+) damage \\(([\\d\\.]+)\\ m\\)/i);if(a||(this.damage.isDealt=!1,this.damage.isReceived=!0,a=t.match(/Struck by (.*) for (-?[\\d\\.]+) damage \\(([\\d\\.]+)\\ m\\)/i)),!a)return void console.error(\"VictoryDamage:Display with wrong format\",t);if(this.interesting=!0,this.otherPlayer=a[1],e&&this.otherPlayer.match(/<BOT>[\\d]-[A-F0-9]{32}/))return void(this.interesting=!1);this.date&&(this.damage.timestamp=this.date.getTime());var i=parseInt(a[2],10);this.damage.isDealt?this.damage.dealt=i:this.damage.received=i,this.damage.range=parseInt(a[3],10),this.damage.range>3&&(this.damage.isRanged=!0,this.damage.range>300&&(this.damage.isAFK=!0));var s=t.match(/BLOCKED ([\\d]+)%/i);s&&(this.damage.isBlocked=!0,this.damage.block=parseInt(s[1],10),50===this.damage.block?this.damage.isRanged=!0:100!==this.damage.block&&25!==this.damage.block&&console.info(\"culling-log-parser: Found abnormal block value!\",s[1],this.fullLine)),t.match(\"BACKSTAB!\")&&(this.damage.isBackstab=!0),t.match(\"HEADSHOT!\")&&(this.damage.isHeadshot=!0)}}},{key:\"parseRankScoring\",value:function(){if(\"LogOnline:Warning\"===this.moduleName){var e=this.fullLine.substr(49),t=e.match(/RankScoring (win|loss|kill|death): (-?[\\d]+)/i);if(t)switch(this.interesting=!0,this.score=parseInt(t[2],10),t[1]){case\"win\":this.isWin=!0;break;case\"loss\":this.isLoss=!0;break;case\"kill\":this.isKill=!0;break;case\"death\":this.isDeath=!0;break;default:console.error(\"Found unknown RankScoring value:\"+e)}}}}]),e}();Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=o},function(e,t,a){\"use strict\";var i=a(2),s=a(0);t.DamageSummary=s[\"default\"];var n=a(3);t.makeCloneable=n[\"default\"];var r=a(1);t.ICullingParser=r,Object.defineProperty(t,\"__esModule\",{value:!0}),t[\"default\"]=i[\"default\"]}])});\n//# sourceMappingURL=index.es5.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../log-parser/dist/index.es5.js\n// module id = 135\n// module chunks = 1","\"use strict\";\nfunction sortGenericByDiff(diff, order) {\n    if (order === 'asc') {\n        return diff;\n    }\n    else {\n        return diff * -1;\n    }\n}\nfunction sortGamesByStart(a, b, order = 'asc') {\n    const diff = a.start.getTime() - b.start.getTime();\n    return sortGenericByDiff(diff, order);\n}\nexports.sortGamesByStart = sortGamesByStart;\nfunction fastConcat(array, otherArray) {\n    otherArray.forEach((v) => array.push(v));\n}\nexports.fastConcat = fastConcat;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.ts","\"use strict\";\nvar culling_log_parser_1 = require('culling-log-parser');\nvar utils_1 = require('../utils');\n// fake loading bar 4Head\nvar fakeProgress = 0;\nfunction fakeProgressIncrementor() {\n    var remaining = 100 - fakeProgress;\n    fakeProgress += remaining * 0.01;\n    return fakeProgress;\n}\n;\nfunction handleFile(file, progressHandler, successHandler, errorHandler) {\n    var reader = new FileReader();\n    reader.readAsText(file);\n    reader.onprogress = function (progressEvent) {\n        var progress = 0;\n        if (progressEvent.lengthComputable) {\n            progress = progressEvent.loaded / progressEvent.total * 100;\n        }\n        else {\n            // fake it!\n            console.log('Faking progress');\n            progress = fakeProgressIncrementor();\n        }\n        progress = progress / 2; // divide by two, because these events only count for the filereading itself for now\n        progressHandler.call(reader, progress);\n    };\n    reader.onload = function (event) {\n        var result = void 0;\n        try {\n            result = culling_log_parser_1.default(reader.result, { ignoreBots: true });\n        }\n        catch (e) {\n            errorHandler.call(reader, e);\n            return;\n        }\n        successHandler.call(reader, result);\n    };\n    reader.onerror = errorHandler;\n}\nonmessage = function onmessage(event) {\n    var files = event.data;\n    var totalResult = {\n        end: new Date(0),\n        entries: [],\n        games: [],\n        meta: {\n            errors: [],\n            lines: {\n                relevant: 0,\n                total: 0\n            },\n            version: 0,\n            warnings: []\n        },\n        players: {},\n        start: new Date(),\n        summary: {\n            damage: new culling_log_parser_1.DamageSummary(),\n            deaths: 0,\n            kills: 0,\n            losses: 0,\n            wins: 0\n        }\n    };\n    var fileSerialHandler = function fileSerialHandler(index) {\n        var arrayProgress = index / files.length * 100;\n        handleFile(files[index], function (progress) {\n            postMessage({\n                progress: arrayProgress + progress / files.length,\n                type: 'progress'\n            });\n        }, function (output) {\n            try {\n                var beforeLast = false;\n                if (output.start < totalResult.start) {\n                    totalResult.start = output.start;\n                    beforeLast = true;\n                }\n                if (output.end > totalResult.end) {\n                    if (index > 0 && beforeLast) {\n                        console.warn('A log file was before and after the already parsed output.', files[index - 1].name, 'output.end', output.end, 'output.start', output.start, 'totalResult.end', totalResult.end, 'totalResult.start', totalResult.start);\n                    }\n                    totalResult.end = output.end;\n                }\n                utils_1.fastConcat(totalResult.entries, output.entries);\n                utils_1.fastConcat(totalResult.games, output.games);\n                totalResult.meta.lines.relevant += output.meta.lines.relevant;\n                totalResult.meta.lines.total += output.meta.lines.total;\n                Object.keys(output.players).forEach(function (name) {\n                    var player = totalResult.players[name];\n                    if (!player) {\n                        totalResult.players[name] = player = output.players[name];\n                    }\n                    else {\n                        player.damage = player.damage.addOtherSummary(output.players[name].damage);\n                        player.killed += output.players[name].killed;\n                        player.died += output.players[name].died;\n                        player.timesMet += output.players[name].timesMet;\n                    }\n                });\n                totalResult.summary.damage = totalResult.summary.damage.addOtherSummary(output.summary.damage);\n                totalResult.summary.deaths += output.summary.deaths;\n                totalResult.summary.kills += output.summary.kills;\n                totalResult.summary.losses += output.summary.losses;\n                totalResult.summary.wins += output.summary.wins;\n                utils_1.fastConcat(totalResult.meta.errors, output.meta.errors);\n                utils_1.fastConcat(totalResult.meta.warnings, output.meta.warnings);\n                index++;\n                if (files[index]) {\n                    // get more files\n                    fileSerialHandler(index);\n                }\n                else {\n                    totalResult.games.sort(utils_1.sortGamesByStart);\n                    postMessage({\n                        output: culling_log_parser_1.makeCloneable(totalResult),\n                        type: 'done'\n                    });\n                }\n            }\n            catch (error) {\n                postMessage({\n                    error: error.message,\n                    stack: error.stack,\n                    type: 'error'\n                });\n            }\n        }, function (error) {\n            console.log('Posting error');\n            postMessage({\n                error: error.message,\n                stack: error.stack,\n                type: 'error'\n            });\n        });\n    };\n    fileSerialHandler(0);\n    postMessage({\n        type: 'started'\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker/index.ts"],"sourceRoot":""}